{"ast":null,"code":"var _jsxFileName = \"/Users/nagunaidu/Desktop/React Final Project/final-librarylink1/src/components/PublisherList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './PublisherList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PublisherList = () => {\n  _s();\n  const [publishers, setPublishers] = useState([]);\n  useEffect(() => {\n    fetchPublishers();\n  }, []);\n  const fetchPublishers = async () => {\n    try {\n      const response = await axios.get('/api/publishers');\n      setPublishers(response.data);\n    } catch (error) {\n      console.error('Error fetching publishers', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"publisher-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Publishers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: publishers.map(publisher => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: publisher.name\n      }, publisher.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(PublisherList, \"NXWbKMSXkke70PnB/elIKklTn2M=\");\n_c = PublisherList;\nexport default PublisherList;\nvar _c;\n$RefreshReg$(_c, \"PublisherList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PublisherList","_s","publishers","setPublishers","fetchPublishers","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","publisher","name","id","_c","$RefreshReg$"],"sources":["/Users/nagunaidu/Desktop/React Final Project/final-librarylink1/src/components/PublisherList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './PublisherList.css';\n\nconst PublisherList = () => {\n  const [publishers, setPublishers] = useState([]);\n\n  useEffect(() => {\n    fetchPublishers();\n  }, []);\n\n  const fetchPublishers = async () => {\n    try {\n      const response = await axios.get('/api/publishers');\n      setPublishers(response.data);\n    } catch (error) {\n      console.error('Error fetching publishers', error);\n    }\n  };\n\n  return (\n    <div className=\"publisher-list\">\n      <h2>Publishers</h2>\n      <ul>\n        {publishers.map(publisher => (\n          <li key={publisher.id}>{publisher.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PublisherList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACdS,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iBAAiB,CAAC;MACnDH,aAAa,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACET,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhB,OAAA;MAAAY,QAAA,EACGT,UAAU,CAACc,GAAG,CAACC,SAAS,iBACvBlB,OAAA;QAAAY,QAAA,EAAwBM,SAAS,CAACC;MAAI,GAA7BD,SAAS,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CA1BID,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}